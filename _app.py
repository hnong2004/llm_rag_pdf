#!/usr/bin/env python3

import os
import streamlit as st
from groq import Groq
from dotenv import load_dotenv

# ‡πÇ‡∏´‡∏•‡∏î environment variables ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå .env
load_dotenv(".env")

# ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ GROQ_API_KEY ‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏†‡∏≤‡∏û .env file
GROQ_API_KEY = os.getenv("GROQ_API_KEY")

# ‡∏™‡∏£‡πâ‡∏≤‡∏á client ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Groq API
client = Groq(api_key=GROQ_API_KEY)


def chatboot(question):

    # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î system prompt ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö LLM ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏•‡πà‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏¢
    system_prompt = """
        ‡∏ô‡πà‡∏≤‡∏ô ‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢ ‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏≤‡∏á‡∏ó‡∏¥‡∏®‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏Ñ‡πÄ‡∏´‡∏ô‡∏∑‡∏≠ ‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï ‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏ß‡∏µ‡∏¢‡∏á‡∏ß‡∏£‡∏ô‡∏Ñ‡∏£ (‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏û‡∏•‡∏±‡∏ß) ‡πÄ‡∏ß‡∏µ‡∏¢‡∏á‡∏®‡∏µ‡∏£‡∏©‡∏∞‡πÄ‡∏Å‡∏© (‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏á‡∏±‡πà‡∏ß) ‡πÄ‡∏ß‡∏µ‡∏¢‡∏á‡∏†‡∏π‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÅ‡∏ä‡πà‡πÅ‡∏´‡πâ‡∏á ‡∏≠‡∏µ‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏¢‡∏±‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ï‡πâ‡∏ô‡∏ô‡πâ‡∏≥‡∏Ç‡∏≠‡∏á‡πÅ‡∏°‡πà‡∏ô‡πâ‡∏≥‡∏ô‡πà‡∏≤‡∏ô
‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå ‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏Å‡πà‡∏¢‡∏≤‡∏ß‡∏ô‡∏≤‡∏ô ‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ô‡∏û‡∏á‡∏®‡∏≤‡∏ß‡∏î‡∏≤‡∏£‡∏ß‡πà‡∏≤ ‡∏ô‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ ‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏ô‡πà‡∏≤‡∏ô‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï‡πÄ‡∏õ‡πá‡∏ô‡∏ô‡∏Ñ‡∏£‡∏£‡∏±‡∏ê‡πÄ‡∏•‡πá‡∏Å ‡πÜ ‡∏Å‡πà‡∏≠‡∏ï‡∏±‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡∏£‡∏≤‡∏ß‡∏Å‡∏•‡∏≤‡∏á‡∏û‡∏∏‡∏ó‡∏ò‡∏®‡∏ï‡∏ß‡∏£‡∏£‡∏©‡∏ó‡∏µ‡πà 18 ‡∏ö‡∏£‡∏¥‡πÄ‡∏ß‡∏ì‡∏ó‡∏µ‡πà‡∏£‡∏≤‡∏ö‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏°‡πà‡∏ô‡πâ‡∏≥‡∏ô‡πà‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡πÅ‡∏°‡πà‡∏ô‡πâ‡∏≥‡∏™‡∏≤‡∏Ç‡∏≤‡πÉ‡∏ô‡∏´‡∏∏‡∏ö‡πÄ‡∏Ç‡∏≤‡∏ó‡∏≤‡∏á‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏Ñ‡πÄ‡∏´‡∏ô‡∏∑‡∏≠
        """

    # ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏•‡∏∞ system prompt ‡πÑ‡∏õ‡∏¢‡∏±‡∏á LLM ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö
    response = client.chat.completions.create(
        # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ‡πÇ‡∏°‡πÄ‡∏î‡∏•        
        model="llama-3.1-8b-instant",
        messages=[
            # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó
            {"role": "system", "content": system_prompt},
            # ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
            {"role": "user", "content": question},
        ],
        temperature=0.2,  # Fine-tuning 
        max_tokens= 256,  # ‡πÄ‡∏ä‡πá‡∏Ñ max_token ‡∏£‡∏∞‡∏ß‡∏±‡∏á exceed API Key (‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà ‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡πÇ‡∏°‡πÄ‡∏î‡∏•)
    )

    return response.choices[0].message.content.strip()


def main():
    """‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏õ Streamlit"""

    st.set_page_config(page_title="Chatbot", page_icon="ü§ñ", layout="wide")

    st.title(" ")
    st.subheader(" ")

    with st.form("chat_form"):
        query = st.text_input(" :", placeholder=" ...").strip()

        if "messages" not in st.session_state:
            st.session_state["messages"] = [
                {"role": "assistant", "content": "  :)"}
            ]

        submitted = st.form_submit_button("Submit")

        if submitted and query:
            answer = chatboot(query)
            st.session_state["messages"].append({"role": "user", "content": query})
            st.session_state["messages"].append(
                {"role": "assistant", "content": answer}
            )
        elif submitted and not query:
            st.warning("Text before submiting")

    chat_area = st.empty()

    for msg in st.session_state["messages"]:
        if msg["role"] == "assistant":
            chat_area.write(f"**Bot:** {msg['content']}\n")
        else:
            chat_area.write(f"**You:** {msg['content']}\n")


if __name__ == "__main__":
    main()
